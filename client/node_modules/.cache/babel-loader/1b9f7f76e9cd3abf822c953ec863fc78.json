{"ast":null,"code":"import React, { useEffect, useRef, useReducer, useCallback, useDebugValue, useMemo } from 'react';\n/* istanbul ignore file */\n\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\n\nconst globalScope = (() => {\n  if (typeof self === \"object\" && self.self === self) return self;\n  if (typeof global === \"object\" && global.global === global) return global;\n  if (typeof global === \"object\" && global.GLOBAL === global) return global;\n  return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\n\n\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\n\nconst noop = () => {};\n\nclass MockAbortController {\n  constructor() {\n    this.abort = noop;\n    this.signal = {};\n  }\n\n}\n\nlet PropTypes;\n\ntry {\n  PropTypes = require(\"prop-types\");\n} catch (e) {}\n\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes && PropTypes.shape({\n  initialValue: PropTypes.any,\n  data: PropTypes.any,\n  error: PropTypes.instanceOf(Error),\n  value: PropTypes.any,\n  startedAt: PropTypes.instanceOf(Date),\n  finishedAt: PropTypes.instanceOf(Date),\n  status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n  isInitial: PropTypes.bool,\n  isPending: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isFulfilled: PropTypes.bool,\n  isResolved: PropTypes.bool,\n  isRejected: PropTypes.bool,\n  isSettled: PropTypes.bool,\n  counter: PropTypes.number,\n  promise: PropTypes.instanceOf(Promise),\n  run: PropTypes.func,\n  reload: PropTypes.func,\n  cancel: PropTypes.func,\n  setData: PropTypes.func,\n  setError: PropTypes.func\n});\nvar propTypes = PropTypes && {\n  Async: {\n    children: childrenFn,\n    promise: PropTypes.instanceOf(Promise),\n    promiseFn: PropTypes.func,\n    deferFn: PropTypes.func,\n    watch: PropTypes.any,\n    watchFn: PropTypes.func,\n    initialValue: PropTypes.any,\n    onResolve: PropTypes.func,\n    onReject: PropTypes.func,\n    reducer: PropTypes.func,\n    dispatcher: PropTypes.func,\n    debugLabel: PropTypes.string,\n    suspense: PropTypes.bool\n  },\n  Initial: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Pending: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    initial: PropTypes.bool\n  },\n  Fulfilled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Rejected: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Settled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  }\n};\n\nconst renderFn = function (children) {\n  if (typeof children === \"function\") {\n    const render = children;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return render(...args);\n  }\n\n  return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\n\n\nconst IfInitial = _ref => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref;\n  return React.createElement(React.Fragment, null, state.isInitial || persist && !state.data ? renderFn(children, state) : null);\n};\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\n\n\nconst IfPending = _ref2 => {\n  let {\n    children,\n    initial,\n    state = {}\n  } = _ref2;\n  return React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n};\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\n\n\nconst IfFulfilled = _ref3 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref3;\n  return React.createElement(React.Fragment, null, state.isFulfilled || persist && state.data ? renderFn(children, state.data, state) : null);\n};\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\n\n\nconst IfRejected = _ref4 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref4;\n  return React.createElement(React.Fragment, null, state.isRejected || persist && state.error ? renderFn(children, state.error, state) : null);\n};\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\n\n\nconst IfSettled = _ref5 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref5;\n  return React.createElement(React.Fragment, null, state.isSettled || persist && state.value ? renderFn(children, state) : null);\n};\n\nif (propTypes) {\n  IfInitial.propTypes = propTypes.Initial;\n  IfPending.propTypes = propTypes.Pending;\n  IfFulfilled.propTypes = propTypes.Fulfilled;\n  IfRejected.propTypes = propTypes.Rejected;\n  IfSettled.propTypes = propTypes.Settled;\n}\n\nvar StatusTypes;\n\n(function (StatusTypes) {\n  StatusTypes[\"initial\"] = \"initial\";\n  StatusTypes[\"pending\"] = \"pending\";\n  StatusTypes[\"fulfilled\"] = \"fulfilled\";\n  StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\n\nconst getInitialStatus = (value, promise) => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  if (promise) return StatusTypes.pending;\n  return StatusTypes.initial;\n};\n\nconst getIdleStatus = value => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  return StatusTypes.initial;\n};\n\nconst getStatusProps = status => ({\n  status,\n  isInitial: status === StatusTypes.initial,\n  isPending: status === StatusTypes.pending,\n  isLoading: status === StatusTypes.pending,\n  isFulfilled: status === StatusTypes.fulfilled,\n  isResolved: status === StatusTypes.fulfilled,\n  isRejected: status === StatusTypes.rejected,\n  isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected\n}); // This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\n\n\nconst NeverSettle = function () {};\n/* istanbul ignore next */\n\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(NeverSettle, Promise);\n} else {\n  NeverSettle.__proto__ = Promise;\n}\n\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n  finally() {\n    return this;\n  },\n\n  catch() {\n    return this;\n  },\n\n  then() {\n    return this;\n  }\n\n});\nconst neverSettle = new NeverSettle();\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"start\"] = \"start\";\n  ActionTypes[\"cancel\"] = \"cancel\";\n  ActionTypes[\"fulfill\"] = \"fulfill\";\n  ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\n\nconst init = _ref6 => {\n  let {\n    initialValue,\n    promise,\n    promiseFn\n  } = _ref6;\n  return {\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.start:\n      return { ...state,\n        startedAt: new Date(),\n        finishedAt: undefined,\n        ...getStatusProps(StatusTypes.pending),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.cancel:\n      return { ...state,\n        startedAt: undefined,\n        finishedAt: undefined,\n        ...getStatusProps(getIdleStatus(state.error || state.data)),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.fulfill:\n      return { ...state,\n        data: action.payload,\n        value: action.payload,\n        error: undefined,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.fulfilled),\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.reject:\n      return { ...state,\n        error: action.payload,\n        value: action.payload,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.rejected),\n        promise: action.meta.promise\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst dispatchMiddleware = dispatch => function (action) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  dispatch(action, ...args);\n\n  if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n    action.payload();\n  }\n};\n\nclass Async extends React.Component {}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\n\n\nfunction createInstance() {\n  let defaultOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let displayName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Async\";\n  const {\n    Consumer: UnguardedConsumer,\n    Provider\n  } = React.createContext(undefined);\n\n  function Consumer(_ref7) {\n    let {\n      children\n    } = _ref7;\n    return React.createElement(UnguardedConsumer, null, value => {\n      if (!value) {\n        throw new Error(\"this component should only be used within an associated <Async> component!\");\n      }\n\n      return children(value);\n    });\n  }\n\n  class Async extends React.Component {\n    constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.counter = 0;\n      this.args = [];\n      this.promise = neverSettle;\n      this.abortController = new MockAbortController();\n      this.start = this.start.bind(this);\n      this.load = this.load.bind(this);\n      this.run = this.run.bind(this);\n      this.cancel = this.cancel.bind(this);\n      this.onResolve = this.onResolve.bind(this);\n      this.onReject = this.onReject.bind(this);\n      this.setData = this.setData.bind(this);\n      this.setError = this.setError.bind(this);\n      const promise = props.promise;\n      const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n      const initialValue = props.initialValue || defaultOptions.initialValue;\n      this.state = { ...init({\n          initialValue,\n          promise,\n          promiseFn\n        }),\n        cancel: this.cancel,\n        run: this.run,\n        reload: () => {\n          this.load();\n          this.run(...this.args);\n        },\n        setData: this.setData,\n        setError: this.setError\n      };\n      this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n      const {\n        devToolsDispatcher\n      } = globalScope.__REACT_ASYNC__;\n\n      const _reducer = props.reducer || defaultOptions.reducer;\n\n      const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n\n      const reducer$1 = _reducer ? (state, action) => _reducer(state, action, reducer) : reducer;\n      const dispatch = dispatchMiddleware((action, callback) => {\n        this.setState(state => reducer$1(state, action), callback);\n      });\n      this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n    }\n\n    componentDidMount() {\n      this.mounted = true;\n\n      if (this.props.promise || !this.state.initialValue) {\n        this.load();\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        watch,\n        watchFn = defaultOptions.watchFn,\n        promise,\n        promiseFn\n      } = this.props;\n\n      if (watch !== prevProps.watch) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (watchFn && watchFn({ ...defaultOptions,\n        ...this.props\n      }, { ...defaultOptions,\n        ...prevProps\n      })) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (promise !== prevProps.promise) {\n        if (this.counter) this.cancel();\n        if (promise) return this.load();\n      }\n\n      if (promiseFn !== prevProps.promiseFn) {\n        if (this.counter) this.cancel();\n        if (promiseFn) return this.load();\n      }\n    }\n\n    componentWillUnmount() {\n      this.cancel();\n      this.mounted = false;\n    }\n\n    getMeta(meta) {\n      return {\n        counter: this.counter,\n        promise: this.promise,\n        debugLabel: this.debugLabel,\n        ...meta\n      };\n    }\n\n    start(promiseFn) {\n      if (\"AbortController\" in globalScope) {\n        this.abortController.abort();\n        this.abortController = new globalScope.AbortController();\n      }\n\n      this.counter++;\n      return this.promise = new Promise((resolve, reject) => {\n        if (!this.mounted) return;\n\n        const executor = () => promiseFn().then(resolve, reject);\n\n        this.dispatch({\n          type: ActionTypes.start,\n          payload: executor,\n          meta: this.getMeta()\n        });\n      });\n    }\n\n    load() {\n      const promise = this.props.promise;\n      const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n\n      if (promise) {\n        this.start(() => promise).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      } else if (promiseFn) {\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        this.start(() => promiseFn(props, this.abortController)).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      }\n    }\n\n    run() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      const deferFn = this.props.deferFn || defaultOptions.deferFn;\n\n      if (deferFn) {\n        this.args = args;\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n      }\n    }\n\n    cancel() {\n      const onCancel = this.props.onCancel || defaultOptions.onCancel;\n      onCancel && onCancel();\n      this.counter++;\n      this.abortController.abort();\n      this.mounted && this.dispatch({\n        type: ActionTypes.cancel,\n        meta: this.getMeta()\n      });\n    }\n\n    onResolve(counter) {\n      return data => {\n        if (this.counter === counter) {\n          const onResolve = this.props.onResolve || defaultOptions.onResolve;\n          this.setData(data, () => onResolve && onResolve(data));\n        }\n\n        return data;\n      };\n    }\n\n    onReject(counter) {\n      return error => {\n        if (this.counter === counter) {\n          const onReject = this.props.onReject || defaultOptions.onReject;\n          this.setError(error, () => onReject && onReject(error));\n        }\n\n        return error;\n      };\n    }\n\n    setData(data, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: this.getMeta()\n      }, callback);\n      return data;\n    }\n\n    setError(error, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: this.getMeta()\n      }, callback);\n      return error;\n    }\n\n    render() {\n      const {\n        children,\n        suspense\n      } = this.props;\n\n      if (suspense && this.state.isPending && this.promise !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw this.promise;\n      }\n\n      if (typeof children === \"function\") {\n        const render = children;\n        return React.createElement(Provider, {\n          value: this.state\n        }, render(this.state));\n      }\n\n      if (children !== undefined && children !== null) {\n        return React.createElement(Provider, {\n          value: this.state\n        }, children);\n      }\n\n      return null;\n    }\n\n  }\n\n  if (propTypes) Async.propTypes = propTypes.Async;\n\n  const AsyncInitial = props => React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncPending = props => React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncFulfilled = props => React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncRejected = props => React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncSettled = props => React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, {\n    state: st\n  })));\n\n  AsyncInitial.displayName = `${displayName}.Initial`;\n  AsyncPending.displayName = `${displayName}.Pending`;\n  AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n  AsyncRejected.displayName = `${displayName}.Rejected`;\n  AsyncSettled.displayName = `${displayName}.Settled`;\n  return Object.assign(Async, {\n    displayName: displayName,\n    Initial: AsyncInitial,\n    Pending: AsyncPending,\n    Loading: AsyncPending,\n    Fulfilled: AsyncFulfilled,\n    Resolved: AsyncFulfilled,\n    Rejected: AsyncRejected,\n    Settled: AsyncSettled\n  });\n}\n\nvar Async$1 = createInstance();\n\nfunction useAsync(arg1, arg2) {\n  const options = typeof arg1 === \"function\" ? { ...arg2,\n    promiseFn: arg1\n  } : arg1;\n  const counter = useRef(0);\n  const isMounted = useRef(true);\n  const lastArgs = useRef(undefined);\n  const lastOptions = useRef(options);\n  const lastPromise = useRef(neverSettle);\n  const abortController = useRef(new MockAbortController());\n  const {\n    devToolsDispatcher\n  } = globalScope.__REACT_ASYNC__;\n  const {\n    reducer: reducer$1,\n    dispatcher = devToolsDispatcher\n  } = options;\n  const [state, _dispatch] = useReducer(reducer$1 ? (state, action) => reducer$1(state, action, reducer) : reducer, options, init);\n  const dispatch = useCallback(dispatcher ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current) : dispatchMiddleware(_dispatch), [dispatcher]);\n  const {\n    debugLabel\n  } = options;\n  const getMeta = useCallback(meta => ({\n    counter: counter.current,\n    promise: lastPromise.current,\n    debugLabel,\n    ...meta\n  }), [debugLabel]);\n  const setData = useCallback(function (data) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return data;\n  }, [dispatch, getMeta]);\n  const setError = useCallback(function (error) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return error;\n  }, [dispatch, getMeta]);\n  const {\n    onResolve,\n    onReject\n  } = options;\n  const handleResolve = useCallback(count => data => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n  const handleReject = useCallback(count => err => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n  const start = useCallback(promiseFn => {\n    if (\"AbortController\" in globalScope) {\n      abortController.current.abort();\n      abortController.current = new globalScope.AbortController();\n    }\n\n    counter.current++;\n    return lastPromise.current = new Promise((resolve, reject) => {\n      if (!isMounted.current) return;\n\n      const executor = () => promiseFn().then(resolve, reject);\n\n      dispatch({\n        type: ActionTypes.start,\n        payload: executor,\n        meta: getMeta()\n      });\n    });\n  }, [dispatch, getMeta]);\n  const {\n    promise,\n    promiseFn,\n    initialValue\n  } = options;\n  const load = useCallback(() => {\n    const isPreInitialized = initialValue && counter.current === 0;\n\n    if (promise) {\n      start(() => promise).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    } else if (promiseFn && !isPreInitialized) {\n      start(() => promiseFn(lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n  const {\n    deferFn\n  } = options;\n  const run = useCallback(function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    if (deferFn) {\n      lastArgs.current = args;\n      start(() => deferFn(args, lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, deferFn, handleResolve, handleReject]);\n  const reload = useCallback(() => {\n    lastArgs.current ? run(...lastArgs.current) : load();\n  }, [run, load]);\n  const {\n    onCancel\n  } = options;\n  const cancel = useCallback(() => {\n    onCancel && onCancel();\n    counter.current++;\n    abortController.current.abort();\n    isMounted.current && dispatch({\n      type: ActionTypes.cancel,\n      meta: getMeta()\n    });\n  }, [onCancel, dispatch, getMeta]);\n  /* These effects should only be triggered on changes to specific props */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  const {\n    watch,\n    watchFn\n  } = options;\n  useEffect(() => {\n    if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n      lastOptions.current = options;\n      load();\n    }\n  });\n  useEffect(() => {\n    lastOptions.current = options;\n  }, [options]);\n  useEffect(() => {\n    if (counter.current) cancel();\n    if (promise || promiseFn) load();\n  }, [promise, promiseFn, watch]);\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  useEffect(() => () => cancel(), []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  useDebugValue(state, _ref8 => {\n    let {\n      status\n    } = _ref8;\n    return `[${counter.current}] ${status}`;\n  });\n\n  if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n    // Rely on Suspense to handle the loading state\n    throw lastPromise.current;\n  }\n\n  return useMemo(() => ({ ...state,\n    run,\n    reload,\n    cancel,\n    setData,\n    setError\n  }), [state, run, reload, cancel, setData, setError]);\n}\n\nclass FetchError extends Error {\n  constructor(response) {\n    super(`${response.status} ${response.statusText}`);\n    this.response = response;\n    /* istanbul ignore next */\n\n    if (Object.setPrototypeOf) {\n      // Not available in IE 10, but can be polyfilled\n      Object.setPrototypeOf(this, FetchError.prototype);\n    }\n  }\n\n}\n\nconst parseResponse = (accept, json) => res => {\n  if (!res.ok) return Promise.reject(new FetchError(res));\n  if (typeof json === \"boolean\") return json ? res.json() : res;\n  return accept === \"application/json\" ? res.json() : res;\n};\n\nfunction isEvent(e) {\n  return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\n\n\nfunction useAsyncFetch(resource, init) {\n  let {\n    defer,\n    json,\n    ...options\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const method = resource.method || init && init.method;\n  const headers = resource.headers || init && init.headers || {};\n  const accept = headers[\"Accept\"] || headers[\"accept\"] || headers.get && headers.get(\"accept\");\n\n  const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n\n  const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n  const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n  const identity = JSON.stringify({\n    resource,\n    init,\n    isDefer\n  });\n  const promiseFn = useCallback((_, _ref9) => {\n    let {\n      signal\n    } = _ref9;\n    return doFetch(resource, {\n      signal,\n      ...init\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const deferFn = useCallback(function (_ref10, _, _ref11) {\n    let [override] = _ref10;\n    let {\n      signal\n    } = _ref11;\n\n    if (!override || isEvent(override)) {\n      return doFetch(resource, {\n        signal,\n        ...init\n      });\n    }\n\n    if (typeof override === \"function\") {\n      const {\n        resource: runResource,\n        ...runInit\n      } = override({\n        resource,\n        signal,\n        ...init\n      });\n      return doFetch(runResource || resource, {\n        signal,\n        ...runInit\n      });\n    }\n\n    const {\n      resource: runResource,\n      ...runInit\n    } = override;\n    return doFetch(runResource || resource, {\n      signal,\n      ...init,\n      ...runInit\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const state = useAsync({ ...options,\n    [fn]: isDefer ? deferFn : promiseFn\n  });\n  useDebugValue(state, _ref12 => {\n    let {\n      counter,\n      status\n    } = _ref12;\n    return `[${counter}] ${status}`;\n  });\n  return state;\n}\n\nconst unsupported = () => {\n  throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\n\nvar useAsync$1 = useEffect ? useAsync : unsupported;\nconst useFetch = useEffect ? useAsyncFetch : unsupported;\nexport default Async$1;\nexport { ActionTypes, Async$1 as Async, FetchError, IfFulfilled, IfInitial, IfPending, IfRejected, IfSettled, StatusTypes, createInstance, dispatchMiddleware, globalScope, init, neverSettle, reducer, useAsync$1 as useAsync, useFetch };","map":{"version":3,"mappings":"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","names":["globalScope","self","global","GLOBAL","__REACT_ASYNC__","noop","MockAbortController","constructor","abort","signal","PropTypes","require","e","childrenFn","oneOfType","node","func","stateObject","shape","initialValue","any","data","error","instanceOf","Error","value","startedAt","Date","finishedAt","status","oneOf","isInitial","bool","isPending","isLoading","isFulfilled","isResolved","isRejected","isSettled","counter","number","promise","Promise","run","reload","cancel","setData","setError","Async","children","promiseFn","deferFn","watch","watchFn","onResolve","onReject","reducer","dispatcher","debugLabel","string","suspense","Initial","state","isRequired","persist","Pending","initial","Fulfilled","Rejected","Settled","renderFn","render","args","IfInitial","React","createElement","Fragment","IfPending","IfFulfilled","IfRejected","IfSettled","propTypes","StatusTypes","getInitialStatus","rejected","undefined","fulfilled","pending","getIdleStatus","getStatusProps","NeverSettle","Object","setPrototypeOf","__proto__","prototype","assign","create","finally","catch","then","neverSettle","ActionTypes","init","action","type","start","meta","fulfill","payload","reject","dispatchMiddleware","dispatch","Component","createInstance","defaultOptions","displayName","Consumer","UnguardedConsumer","Provider","createContext","props","mounted","abortController","bind","load","devToolsDispatcher","_reducer","_dispatcher","asyncReducer","callback","setState","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getMeta","AbortController","resolve","executor","onCancel","AsyncInitial","st","AsyncPending","AsyncFulfilled","AsyncRejected","AsyncSettled","Loading","Resolved","useAsync","arg1","arg2","options","useRef","isMounted","lastArgs","lastOptions","lastPromise","_dispatch","useReducer","useCallback","current","handleResolve","count","handleReject","err","isPreInitialized","useEffect","useDebugValue","useMemo","FetchError","response","statusText","parseResponse","accept","json","res","ok","isEvent","useAsyncFetch","resource","defer","method","headers","get","doFetch","input","fetch","isDefer","indexOf","fn","identity","JSON","stringify","_","override","runResource","runInit","unsupported","useFetch"],"sources":["D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\globalScope.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\propTypes.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\helpers.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\status.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\reducer.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\Async.js","D:\\bamboo\\BsksBamboo\\client\\node_modules\\react-async\\dist-src\\useAsync.js"],"sourcesContent":["/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n    if (typeof self === \"object\" && self.self === self)\n        return self;\n    if (typeof global === \"object\" && global.global === global)\n        return global;\n    if (typeof global === \"object\" && global.GLOBAL === global)\n        return global;\n    return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nexport const noop = () => { };\nexport class MockAbortController {\n    constructor() {\n        this.abort = noop;\n        this.signal = {};\n    }\n}\nexport default globalScope;\n","let PropTypes;\ntry {\n    PropTypes = require(\"prop-types\");\n}\ncatch (e) { }\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes &&\n    PropTypes.shape({\n        initialValue: PropTypes.any,\n        data: PropTypes.any,\n        error: PropTypes.instanceOf(Error),\n        value: PropTypes.any,\n        startedAt: PropTypes.instanceOf(Date),\n        finishedAt: PropTypes.instanceOf(Date),\n        status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n        isInitial: PropTypes.bool,\n        isPending: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isFulfilled: PropTypes.bool,\n        isResolved: PropTypes.bool,\n        isRejected: PropTypes.bool,\n        isSettled: PropTypes.bool,\n        counter: PropTypes.number,\n        promise: PropTypes.instanceOf(Promise),\n        run: PropTypes.func,\n        reload: PropTypes.func,\n        cancel: PropTypes.func,\n        setData: PropTypes.func,\n        setError: PropTypes.func,\n    });\nexport default PropTypes && {\n    Async: {\n        children: childrenFn,\n        promise: PropTypes.instanceOf(Promise),\n        promiseFn: PropTypes.func,\n        deferFn: PropTypes.func,\n        watch: PropTypes.any,\n        watchFn: PropTypes.func,\n        initialValue: PropTypes.any,\n        onResolve: PropTypes.func,\n        onReject: PropTypes.func,\n        reducer: PropTypes.func,\n        dispatcher: PropTypes.func,\n        debugLabel: PropTypes.string,\n        suspense: PropTypes.bool,\n    },\n    Initial: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Pending: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        initial: PropTypes.bool,\n    },\n    Fulfilled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Rejected: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Settled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n};\n","import React from \"react\";\nimport propTypes from \"./propTypes\";\nconst renderFn = (children, ...args) => {\n    if (typeof children === \"function\") {\n        const render = children;\n        return render(...args);\n    }\n    return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nexport const IfInitial = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isInitial || (persist && !state.data) ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nexport const IfPending = ({ children, initial, state = {}, }) => React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nexport const IfFulfilled = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isFulfilled || (persist && state.data) ? renderFn(children, state.data, state) : null));\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nexport const IfRejected = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isRejected || (persist && state.error) ? renderFn(children, state.error, state) : null));\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nexport const IfSettled = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isSettled || (persist && state.value) ? renderFn(children, state) : null);\nif (propTypes) {\n    IfInitial.propTypes = propTypes.Initial;\n    IfPending.propTypes = propTypes.Pending;\n    IfFulfilled.propTypes = propTypes.Fulfilled;\n    IfRejected.propTypes = propTypes.Rejected;\n    IfSettled.propTypes = propTypes.Settled;\n}\n","export var StatusTypes;\n(function (StatusTypes) {\n    StatusTypes[\"initial\"] = \"initial\";\n    StatusTypes[\"pending\"] = \"pending\";\n    StatusTypes[\"fulfilled\"] = \"fulfilled\";\n    StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nexport const getInitialStatus = (value, promise) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    if (promise)\n        return StatusTypes.pending;\n    return StatusTypes.initial;\n};\nexport const getIdleStatus = (value) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    return StatusTypes.initial;\n};\nexport const getStatusProps = (status) => ({\n    status,\n    isInitial: status === StatusTypes.initial,\n    isPending: status === StatusTypes.pending,\n    isLoading: status === StatusTypes.pending,\n    isFulfilled: status === StatusTypes.fulfilled,\n    isResolved: status === StatusTypes.fulfilled,\n    isRejected: status === StatusTypes.rejected,\n    isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected,\n});\n","import { getInitialStatus, getIdleStatus, getStatusProps, StatusTypes } from \"./status\";\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () { };\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n    Object.setPrototypeOf(NeverSettle, Promise);\n}\nelse {\n    ;\n    NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n    finally() {\n        return this;\n    },\n    catch() {\n        return this;\n    },\n    then() {\n        return this;\n    },\n});\nexport const neverSettle = new NeverSettle();\nexport var ActionTypes;\n(function (ActionTypes) {\n    ActionTypes[\"start\"] = \"start\";\n    ActionTypes[\"cancel\"] = \"cancel\";\n    ActionTypes[\"fulfill\"] = \"fulfill\";\n    ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nexport const init = ({ initialValue, promise, promiseFn, }) => ({\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle,\n});\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ActionTypes.start:\n            return {\n                ...state,\n                startedAt: new Date(),\n                finishedAt: undefined,\n                ...getStatusProps(StatusTypes.pending),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.cancel:\n            return {\n                ...state,\n                startedAt: undefined,\n                finishedAt: undefined,\n                ...getStatusProps(getIdleStatus(state.error || state.data)),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.fulfill:\n            return {\n                ...state,\n                data: action.payload,\n                value: action.payload,\n                error: undefined,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.fulfilled),\n                promise: action.meta.promise,\n            };\n        case ActionTypes.reject:\n            return {\n                ...state,\n                error: action.payload,\n                value: action.payload,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.rejected),\n                promise: action.meta.promise,\n            };\n        default:\n            return state;\n    }\n};\nexport const dispatchMiddleware = (dispatch) => (action, ...args) => {\n    dispatch(action, ...args);\n    if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n        action.payload();\n    }\n};\n","import React from \"react\";\nimport globalScope, { MockAbortController } from \"./globalScope\";\nimport { IfInitial, IfPending, IfFulfilled, IfRejected, IfSettled } from \"./helpers\";\nimport propTypes from \"./propTypes\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nclass Async extends React.Component {\n}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nexport function createInstance(defaultOptions = {}, displayName = \"Async\") {\n    const { Consumer: UnguardedConsumer, Provider } = React.createContext(undefined);\n    function Consumer({ children }) {\n        return (React.createElement(UnguardedConsumer, null, value => {\n            if (!value) {\n                throw new Error(\"this component should only be used within an associated <Async> component!\");\n            }\n            return children(value);\n        }));\n    }\n    class Async extends React.Component {\n        constructor(props) {\n            super(props);\n            this.mounted = false;\n            this.counter = 0;\n            this.args = [];\n            this.promise = neverSettle;\n            this.abortController = new MockAbortController();\n            this.start = this.start.bind(this);\n            this.load = this.load.bind(this);\n            this.run = this.run.bind(this);\n            this.cancel = this.cancel.bind(this);\n            this.onResolve = this.onResolve.bind(this);\n            this.onReject = this.onReject.bind(this);\n            this.setData = this.setData.bind(this);\n            this.setError = this.setError.bind(this);\n            const promise = props.promise;\n            const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n            const initialValue = props.initialValue || defaultOptions.initialValue;\n            this.state = {\n                ...init({ initialValue, promise, promiseFn }),\n                cancel: this.cancel,\n                run: this.run,\n                reload: () => {\n                    this.load();\n                    this.run(...this.args);\n                },\n                setData: this.setData,\n                setError: this.setError,\n            };\n            this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n            const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n            const _reducer = props.reducer || defaultOptions.reducer;\n            const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n            const reducer = _reducer\n                ? (state, action) => _reducer(state, action, asyncReducer)\n                : asyncReducer;\n            const dispatch = dispatchMiddleware((action, callback) => {\n                this.setState(state => reducer(state, action), callback);\n            });\n            this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n        }\n        componentDidMount() {\n            this.mounted = true;\n            if (this.props.promise || !this.state.initialValue) {\n                this.load();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { watch, watchFn = defaultOptions.watchFn, promise, promiseFn } = this.props;\n            if (watch !== prevProps.watch) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (watchFn &&\n                watchFn({ ...defaultOptions, ...this.props }, { ...defaultOptions, ...prevProps })) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (promise !== prevProps.promise) {\n                if (this.counter)\n                    this.cancel();\n                if (promise)\n                    return this.load();\n            }\n            if (promiseFn !== prevProps.promiseFn) {\n                if (this.counter)\n                    this.cancel();\n                if (promiseFn)\n                    return this.load();\n            }\n        }\n        componentWillUnmount() {\n            this.cancel();\n            this.mounted = false;\n        }\n        getMeta(meta) {\n            return {\n                counter: this.counter,\n                promise: this.promise,\n                debugLabel: this.debugLabel,\n                ...meta,\n            };\n        }\n        start(promiseFn) {\n            if (\"AbortController\" in globalScope) {\n                this.abortController.abort();\n                this.abortController = new globalScope.AbortController();\n            }\n            this.counter++;\n            return (this.promise = new Promise((resolve, reject) => {\n                if (!this.mounted)\n                    return;\n                const executor = () => promiseFn().then(resolve, reject);\n                this.dispatch({ type: ActionTypes.start, payload: executor, meta: this.getMeta() });\n            }));\n        }\n        load() {\n            const promise = this.props.promise;\n            const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n            if (promise) {\n                this.start(() => promise)\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n            else if (promiseFn) {\n                const props = { ...defaultOptions, ...this.props };\n                this.start(() => promiseFn(props, this.abortController))\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n        }\n        run(...args) {\n            const deferFn = this.props.deferFn || defaultOptions.deferFn;\n            if (deferFn) {\n                this.args = args;\n                const props = { ...defaultOptions, ...this.props };\n                return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n            }\n        }\n        cancel() {\n            const onCancel = this.props.onCancel || defaultOptions.onCancel;\n            onCancel && onCancel();\n            this.counter++;\n            this.abortController.abort();\n            this.mounted && this.dispatch({ type: ActionTypes.cancel, meta: this.getMeta() });\n        }\n        onResolve(counter) {\n            return (data) => {\n                if (this.counter === counter) {\n                    const onResolve = this.props.onResolve || defaultOptions.onResolve;\n                    this.setData(data, () => onResolve && onResolve(data));\n                }\n                return data;\n            };\n        }\n        onReject(counter) {\n            return (error) => {\n                if (this.counter === counter) {\n                    const onReject = this.props.onReject || defaultOptions.onReject;\n                    this.setError(error, () => onReject && onReject(error));\n                }\n                return error;\n            };\n        }\n        setData(data, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.fulfill, payload: data, meta: this.getMeta() }, callback);\n            return data;\n        }\n        setError(error, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.reject, payload: error, error: true, meta: this.getMeta() }, callback);\n            return error;\n        }\n        render() {\n            const { children, suspense } = this.props;\n            if (suspense && this.state.isPending && this.promise !== neverSettle) {\n                // Rely on Suspense to handle the loading state\n                throw this.promise;\n            }\n            if (typeof children === \"function\") {\n                const render = children;\n                return React.createElement(Provider, { value: this.state }, render(this.state));\n            }\n            if (children !== undefined && children !== null) {\n                return React.createElement(Provider, { value: this.state }, children);\n            }\n            return null;\n        }\n    }\n    if (propTypes)\n        Async.propTypes = propTypes.Async;\n    const AsyncInitial = props => (React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, { state: st }))));\n    const AsyncPending = props => (React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, { state: st }))));\n    const AsyncFulfilled = props => (React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, { state: st }))));\n    const AsyncRejected = props => (React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, { state: st }))));\n    const AsyncSettled = props => (React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, { state: st }))));\n    AsyncInitial.displayName = `${displayName}.Initial`;\n    AsyncPending.displayName = `${displayName}.Pending`;\n    AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n    AsyncRejected.displayName = `${displayName}.Rejected`;\n    AsyncSettled.displayName = `${displayName}.Settled`;\n    return Object.assign(Async, {\n        displayName: displayName,\n        Initial: AsyncInitial,\n        Pending: AsyncPending,\n        Loading: AsyncPending,\n        Fulfilled: AsyncFulfilled,\n        Resolved: AsyncFulfilled,\n        Rejected: AsyncRejected,\n        Settled: AsyncSettled,\n    });\n}\nexport default createInstance();\n","import { useCallback, useDebugValue, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport globalScope, { MockAbortController, noop } from \"./globalScope\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nfunction useAsync(arg1, arg2) {\n    const options = typeof arg1 === \"function\"\n        ? {\n            ...arg2,\n            promiseFn: arg1,\n        }\n        : arg1;\n    const counter = useRef(0);\n    const isMounted = useRef(true);\n    const lastArgs = useRef(undefined);\n    const lastOptions = useRef(options);\n    const lastPromise = useRef(neverSettle);\n    const abortController = useRef(new MockAbortController());\n    const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n    const { reducer, dispatcher = devToolsDispatcher } = options;\n    const [state, _dispatch] = useReducer(reducer ? (state, action) => reducer(state, action, asyncReducer) : asyncReducer, options, init);\n    const dispatch = useCallback(dispatcher\n        ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current)\n        : dispatchMiddleware(_dispatch), [dispatcher]);\n    const { debugLabel } = options;\n    const getMeta = useCallback((meta) => ({\n        counter: counter.current,\n        promise: lastPromise.current,\n        debugLabel,\n        ...meta,\n    }), [debugLabel]);\n    const setData = useCallback((data, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.fulfill,\n                payload: data,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return data;\n    }, [dispatch, getMeta]);\n    const setError = useCallback((error, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.reject,\n                payload: error,\n                error: true,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return error;\n    }, [dispatch, getMeta]);\n    const { onResolve, onReject } = options;\n    const handleResolve = useCallback(count => (data) => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n    const handleReject = useCallback(count => (err) => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n    const start = useCallback(promiseFn => {\n        if (\"AbortController\" in globalScope) {\n            abortController.current.abort();\n            abortController.current = new globalScope.AbortController();\n        }\n        counter.current++;\n        return (lastPromise.current = new Promise((resolve, reject) => {\n            if (!isMounted.current)\n                return;\n            const executor = () => promiseFn().then(resolve, reject);\n            dispatch({\n                type: ActionTypes.start,\n                payload: executor,\n                meta: getMeta(),\n            });\n        }));\n    }, [dispatch, getMeta]);\n    const { promise, promiseFn, initialValue } = options;\n    const load = useCallback(() => {\n        const isPreInitialized = initialValue && counter.current === 0;\n        if (promise) {\n            start(() => promise)\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n        else if (promiseFn && !isPreInitialized) {\n            start(() => promiseFn(lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n    const { deferFn } = options;\n    const run = useCallback((...args) => {\n        if (deferFn) {\n            lastArgs.current = args;\n            start(() => deferFn(args, lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, deferFn, handleResolve, handleReject]);\n    const reload = useCallback(() => {\n        lastArgs.current ? run(...lastArgs.current) : load();\n    }, [run, load]);\n    const { onCancel } = options;\n    const cancel = useCallback(() => {\n        onCancel && onCancel();\n        counter.current++;\n        abortController.current.abort();\n        isMounted.current &&\n            dispatch({\n                type: ActionTypes.cancel,\n                meta: getMeta(),\n            });\n    }, [onCancel, dispatch, getMeta]);\n    /* These effects should only be triggered on changes to specific props */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    const { watch, watchFn } = options;\n    useEffect(() => {\n        if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n            lastOptions.current = options;\n            load();\n        }\n    });\n    useEffect(() => {\n        lastOptions.current = options;\n    }, [options]);\n    useEffect(() => {\n        if (counter.current)\n            cancel();\n        if (promise || promiseFn)\n            load();\n    }, [promise, promiseFn, watch]);\n    useEffect(() => () => {\n        isMounted.current = false;\n    }, []);\n    useEffect(() => () => cancel(), []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    useDebugValue(state, ({ status }) => `[${counter.current}] ${status}`);\n    if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw lastPromise.current;\n    }\n    return useMemo(() => ({\n        ...state,\n        run,\n        reload,\n        cancel,\n        setData,\n        setError,\n    }), [state, run, reload, cancel, setData, setError]);\n}\nexport class FetchError extends Error {\n    constructor(response) {\n        super(`${response.status} ${response.statusText}`);\n        this.response = response;\n        /* istanbul ignore next */\n        if (Object.setPrototypeOf) {\n            // Not available in IE 10, but can be polyfilled\n            Object.setPrototypeOf(this, FetchError.prototype);\n        }\n    }\n}\nconst parseResponse = (accept, json) => (res) => {\n    if (!res.ok)\n        return Promise.reject(new FetchError(res));\n    if (typeof json === \"boolean\")\n        return json ? res.json() : res;\n    return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n    return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init, { defer, json, ...options } = {}) {\n    const method = resource.method || (init && init.method);\n    const headers = resource.headers || (init && init.headers) || {};\n    const accept = headers[\"Accept\"] || headers[\"accept\"] || (headers.get && headers.get(\"accept\"));\n    const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n    const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n    const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n    const identity = JSON.stringify({\n        resource,\n        init,\n        isDefer,\n    });\n    const promiseFn = useCallback((_, { signal }) => {\n        return doFetch(resource, { signal, ...init });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const deferFn = useCallback(function ([override], _, { signal }) {\n        if (!override || isEvent(override)) {\n            return doFetch(resource, { signal, ...init });\n        }\n        if (typeof override === \"function\") {\n            const { resource: runResource, ...runInit } = override({ resource, signal, ...init });\n            return doFetch(runResource || resource, { signal, ...runInit });\n        }\n        const { resource: runResource, ...runInit } = override;\n        return doFetch(runResource || resource, { signal, ...init, ...runInit });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const state = useAsync({\n        ...options,\n        [fn]: isDefer ? deferFn : promiseFn,\n    });\n    useDebugValue(state, ({ counter, status }) => `[${counter}] ${status}`);\n    return state;\n}\nconst unsupported = () => {\n    throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nexport default useEffect ? useAsync : unsupported;\nexport const useFetch = useEffect ? useAsyncFetch : unsupported;\n"]},"metadata":{},"sourceType":"module"}